{
  "src/lib/components/DeckGL.react.js": {
    "description": "This component lets you visualizes PyDeck and deck/json files\ndirectly in Dash. It also exposes various events (such as click,\nhover and drag) inside callbacks.",
    "displayName": "DeckGL",
    "methods": [],
    "props": {
      "data": {
        "type": {
          "name": "union",
          "value": [
            {
              "name": "object"
            },
            {
              "name": "string"
            }
          ]
        },
        "required": false,
        "description": "Your map using the Deck.gl JSON format. This can be generated by calling\npdk.Deck(...).to_json(). Both a Python dictionary and a JSON-string your map is accepted.",
        "defaultValue": {
          "value": "{}",
          "computed": false
        }
      },
      "id": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "The ID used to identify this component in Dash callbacks."
      },
      "mapboxKey": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "`mapboxKey` (text): You will need a mapbox token to use deck.gl. Please create a mapbox\nand follow the instructions here: https://docs.mapbox.com/help/how-mapbox-works/access-tokens/",
        "defaultValue": {
          "value": "null",
          "computed": false
        }
      },
      "clickEvent": {
        "type": {
          "name": "object"
        },
        "required": false,
        "description": "Read-only prop. This prop is updated when an element in the map is clicked. This contains\nthe original gesture event (in JSON)."
      },
      "clickInfo": {
        "type": {
          "name": "object"
        },
        "required": false,
        "description": "Read-only prop. This prop is updated when an element in the map is clicked. This contains\nthe picking info describing the object being clicked.\n\nComplete description here:\nhttps://deck.gl/docs/developer-guide/interactivity#the-picking-info-object"
      },
      "hoverEvent": {
        "type": {
          "name": "object"
        },
        "required": false,
        "description": "Read-only prop. This prop is updated when an element in the map is hovered. This contains\nthe original gesture event (in JSON)."
      },
      "hoverInfo": {
        "type": {
          "name": "object"
        },
        "required": false,
        "description": "Read-only prop. This prop is updated when an element in the map is hovered. This contains\nthe picking info describing the object being hovered.\n\nComplete description here:\nhttps://deck.gl/docs/developer-guide/interactivity#the-picking-info-object"
      },
      "dragStartEvent": {
        "type": {
          "name": "object"
        },
        "required": false,
        "description": "Read-only prop. This prop is updated when the user starts dragging on the canvas. This contains\nthe original gesture event (in JSON)."
      },
      "dragStartInfo": {
        "type": {
          "name": "object"
        },
        "required": false,
        "description": "Read-only prop. This prop is updated when the user starts dragging on the canvas. This contains\nthe picking info describing the object being dragged.\n\nComplete description here:\nhttps://deck.gl/docs/developer-guide/interactivity#the-picking-info-object"
      },
      "dragEndEvent": {
        "type": {
          "name": "object"
        },
        "required": false,
        "description": "Read-only prop. This prop is updated when the user releases from dragging the canvas. This contains\nthe original gesture event (in JSON)."
      },
      "dragEndInfo": {
        "type": {
          "name": "object"
        },
        "required": false,
        "description": "Read-only prop. This prop is updated when the user releases from dragging the canvas. This contains\nthe picking info describing the object being dragged.\n\nComplete description here:\nhttps://deck.gl/docs/developer-guide/interactivity#the-picking-info-object"
      },
      "setProps": {
        "type": {
          "name": "func"
        },
        "required": false,
        "description": "Dash-assigned callback that should be called to report property changes\nto Dash, to make them available for callbacks."
      }
    }
  }
}